/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client;

import Client.HomePage;
import Entity.Attendance;
import Interface.AttendanceInterface;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 *
 * @author kwongwenzhi
 */
public class ClockInClockOut extends javax.swing.JFrame {
    public static AttendanceInterface<Attendance> attendanceList = HomePage.attendanceList;
    String time = null;
    boolean clockin = false;
    boolean clockout = false;
    Attendance attendance;
    /**
     * Creates new form ClockInClockOut
     */
    public ClockInClockOut() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtxtDeliveryManID = new javax.swing.JTextField();
        jbtnClockIn = new javax.swing.JButton();
        jbtnClockOut = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jcbxStatus = new javax.swing.JComboBox<>();
        jbtnSubmit = new javax.swing.JButton();
        jbtnCancel = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jtxtTime = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("DeliveryMan ID:");

        jbtnClockIn.setText("Clock In");
        jbtnClockIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnClockInActionPerformed(evt);
            }
        });

        jbtnClockOut.setText("Clock Out");
        jbtnClockOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnClockOutActionPerformed(evt);
            }
        });

        jLabel2.setText("Status:");

        jcbxStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Delivery", "Break" }));

        jbtnSubmit.setText("Submit");
        jbtnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSubmitActionPerformed(evt);
            }
        });

        jbtnCancel.setText("Cancel");

        jLabel3.setText("Time:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbtnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtxtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jtxtDeliveryManID, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbxStatus, javax.swing.GroupLayout.Alignment.LEADING, 0, 171, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnClockIn)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnClockOut))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jbtnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxtDeliveryManID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jcbxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnClockIn)
                    .addComponent(jbtnClockOut))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnSubmit)
                    .addComponent(jbtnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnClockInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnClockInActionPerformed
      DateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");
      
      Calendar cal = Calendar.getInstance();
      jtxtTime.setText(dateFormat.format(cal.getTime()));
      time = dateFormat.format(cal.getTime());
      clockin = true;
      clockout = false;
    }//GEN-LAST:event_jbtnClockInActionPerformed

    private void jbtnClockOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnClockOutActionPerformed
      DateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");
      
      Calendar cal = Calendar.getInstance();
      jtxtTime.setText(dateFormat.format(cal.getTime()));
      time = dateFormat.format(cal.getTime());
      clockout = true;
      clockin = false;
    }//GEN-LAST:event_jbtnClockOutActionPerformed

    private void jbtnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSubmitActionPerformed
      boolean found = attendanceList.searchRecord(jtxtDeliveryManID.getText());
      
      if(found){
         attendance = (Attendance)attendanceList.getRecord(jtxtDeliveryManID.getText());
         String id = attendance.getDeliverymanID();
         String name = attendance.getName();
         String clockIn = attendance.getClockIn();
         String clockOut = attendance.getClockOut();
         String status = attendance.getStatus();
         String orderID = attendance.getOrderID();
          
        if(!clockin && !clockout){
             String text = (String)jcbxStatus.getSelectedItem();
             status = text;
             if(clockIn == null){
                 JOptionPane.showMessageDialog(null, "Required to clock in only can update the status.", "Information", JOptionPane.INFORMATION_MESSAGE);
                 return;
             }
             if(clockOut == null){
                 JOptionPane.showMessageDialog(null, "You has clock out. So unable to update the status.", "Information", JOptionPane.INFORMATION_MESSAGE);
                 return;
             }
             Attendance updateAttendance = new Attendance(id,name,clockIn,clockOut,status,orderID);
             int position = attendanceList.getPosition(attendance.getDeliverymanID());
             if(attendanceList.updateRecord(position, updateAttendance)){
                 JOptionPane.showMessageDialog(null, "Update Successful", "Information", JOptionPane.INFORMATION_MESSAGE);
             }else{
                 JOptionPane.showMessageDialog(null, "Update Fail", "Information", JOptionPane.INFORMATION_MESSAGE);
             }
        }         

        if(clockin){
            if(clockIn == null){
                String text = (String)jcbxStatus.getSelectedItem();
                status = text;
                clockIn = time;
                Attendance updateAttendance = new Attendance(id,name,clockIn,clockOut,status,orderID);
                int position = attendanceList.getPosition(attendance.getDeliverymanID());
                             if(attendanceList.updateRecord(position, updateAttendance)){
                 JOptionPane.showMessageDialog(null, "Update Successful", "Information", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(null, "Update Fail", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
            }else{
                 JOptionPane.showMessageDialog(null, "You already Clock In. So unable to change the clock in time.", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
        if(clockout){
            if(clockIn != null && clockOut == null){
                String text = (String)jcbxStatus.getSelectedItem();
                status = text;
                clockOut = time;
                Attendance updateAttendance = new Attendance(id,name,clockIn,clockOut,status,orderID);
                int position = attendanceList.getPosition(attendance.getDeliverymanID());
                             if(attendanceList.updateRecord(position, updateAttendance)){
                 JOptionPane.showMessageDialog(null, "Update Successful", "Information", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(null, "Update Fail", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
            }else if(clockIn == null){
                 JOptionPane.showMessageDialog(null, "You haven Clock In. Please after clock in only can clock out.", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else if(clockOut != null){
                JOptionPane.showMessageDialog(null, "You already Clock Out. So unable to change the clock out time.", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
      }
    }//GEN-LAST:event_jbtnSubmitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClockInClockOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClockInClockOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClockInClockOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClockInClockOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClockInClockOut().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jbtnCancel;
    private javax.swing.JButton jbtnClockIn;
    private javax.swing.JButton jbtnClockOut;
    private javax.swing.JButton jbtnSubmit;
    private javax.swing.JComboBox<String> jcbxStatus;
    private javax.swing.JTextField jtxtDeliveryManID;
    private javax.swing.JTextField jtxtTime;
    // End of variables declaration//GEN-END:variables
}
